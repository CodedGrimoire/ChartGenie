{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/tazkia/Documents/GitHub/ChartGenie/app/components/MermaidRenderer.js"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef } from 'react';\nimport mermaid from 'mermaid';\n\nexport default function MermaidRenderer({ code }) {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    mermaid.initialize({ \n      startOnLoad: true,\n      theme: 'default',\n      securityLevel: 'loose'\n    });\n    \n    if (ref.current && code) {\n      // Clear previous content\n      ref.current.innerHTML = '';\n      \n      try {\n        const uniqueId = `mermaid-${Date.now()}`;\n        mermaid.render(uniqueId, code).then(({ svg }) => {\n          if (ref.current) {\n            ref.current.innerHTML = svg;\n          }\n        }).catch((err) => {\n          console.error('Mermaid render error:', err);\n          if (ref.current) {\n            ref.current.innerHTML = '<p class=\"text-red-500\">⚠️ Failed to render Mermaid diagram.</p>';\n          }\n        });\n      } catch (err) {\n        console.error('Mermaid error:', err);\n        if (ref.current) {\n          ref.current.innerHTML = '<p class=\"text-red-500\">⚠️ Failed to render Mermaid diagram.</p>';\n        }\n      }\n    }\n  }, [code]);\n\n  return <div ref={ref} className=\"w-full overflow-auto\" />;\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS,gBAAgB,EAAE,IAAI,EAAE;IAC9C,MAAM,MAAM,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAEnB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,mJAAA,CAAA,UAAO,CAAC,UAAU,CAAC;YACjB,aAAa;YACb,OAAO;YACP,eAAe;QACjB;QAEA,IAAI,IAAI,OAAO,IAAI,MAAM;YACvB,yBAAyB;YACzB,IAAI,OAAO,CAAC,SAAS,GAAG;YAExB,IAAI;gBACF,MAAM,WAAW,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI;gBACxC,mJAAA,CAAA,UAAO,CAAC,MAAM,CAAC,UAAU,MAAM,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE;oBAC1C,IAAI,IAAI,OAAO,EAAE;wBACf,IAAI,OAAO,CAAC,SAAS,GAAG;oBAC1B;gBACF,GAAG,KAAK,CAAC,CAAC;oBACR,QAAQ,KAAK,CAAC,yBAAyB;oBACvC,IAAI,IAAI,OAAO,EAAE;wBACf,IAAI,OAAO,CAAC,SAAS,GAAG;oBAC1B;gBACF;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,kBAAkB;gBAChC,IAAI,IAAI,OAAO,EAAE;oBACf,IAAI,OAAO,CAAC,SAAS,GAAG;gBAC1B;YACF;QACF;IACF,GAAG;QAAC;KAAK;IAET,qBAAO,8OAAC;QAAI,KAAK;QAAK,WAAU;;;;;;AAClC","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///Users/tazkia/Documents/GitHub/ChartGenie/app/components/LaTeXRenderer.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\n\nexport default function LaTeXRenderer({ code, format = 'tikz' }) {\n  const [imageUrl, setImageUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (code) {\n      renderLaTeX();\n    }\n  }, [code, format]);\n\n  const renderLaTeX = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // For now, we'll show the code and provide options to render\n      // In a production app, you'd integrate with a LaTeX rendering service\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(code);\n  };\n\n  const openInOverleaf = () => {\n    // Create a simple LaTeX document wrapper\n    const fullDocument = `\\\\documentclass{article}\n\\\\usepackage{tikz}\n\\\\usepackage{pgf}\n\\\\begin{document}\n\n${code}\n\n\\\\end{document}`;\n    \n    const encodedCode = encodeURIComponent(fullDocument);\n    const overleafUrl = `https://www.overleaf.com/docs?template=blank&engine=pdflatex#code=${encodedCode}`;\n    window.open(overleafUrl, '_blank');\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-gray-500\">🔄 Rendering LaTeX...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full h-full flex flex-col\">\n      {/* Header with actions */}\n      <div className=\"flex justify-between items-center mb-4 pb-2 border-b\">\n        <h3 className=\"font-medium text-lg\">\n          📐 {format.toUpperCase()} Code\n        </h3>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={copyToClipboard}\n            className=\"px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600\"\n          >\n            📋 Copy Code\n          </button>\n          <button\n            onClick={openInOverleaf}\n            className=\"px-3 py-1 bg-green-500 text-white rounded text-sm hover:bg-green-600\"\n          >\n            📝 Open in Overleaf\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          <strong>Error:</strong> {error}\n        </div>\n      )}\n\n      {/* Code display */}\n      <div className=\"flex-1 bg-gray-50 dark:bg-zinc-900 rounded-lg overflow-hidden\">\n        <div className=\"h-full overflow-auto\">\n          <pre className=\"p-4 text-sm leading-relaxed\">\n            <code className=\"language-latex\">{code}</code>\n          </pre>\n        </div>\n      </div>\n\n      {/* Instructions */}\n      <div className=\"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded text-sm\">\n        <p className=\"font-medium mb-1\">💡 How to use this LaTeX code:</p>\n        <ul className=\"list-disc list-inside space-y-1 text-xs\">\n          <li>Copy the code and paste it into a LaTeX editor like Overleaf</li>\n          <li>Make sure you have the required packages: <code>tikz</code>, <code>pgf</code></li>\n          <li>Compile with pdflatex or xelatex</li>\n          <li>Click \"Open in Overleaf\" for instant editing</li>\n        </ul>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,cAAc,EAAE,IAAI,EAAE,SAAS,MAAM,EAAE;IAC7D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,MAAM;YACR;QACF;IACF,GAAG;QAAC;QAAM;KAAO;IAEjB,MAAM,cAAc;QAClB,aAAa;QACb,SAAS;QAET,IAAI;YACF,6DAA6D;YAC7D,sEAAsE;YACtE,aAAa;QACf,EAAE,OAAO,KAAK;YACZ,SAAS,IAAI,OAAO;YACpB,aAAa;QACf;IACF;IAEA,MAAM,kBAAkB;QACtB,UAAU,SAAS,CAAC,SAAS,CAAC;IAChC;IAEA,MAAM,iBAAiB;QACrB,yCAAyC;QACzC,MAAM,eAAe,CAAC;;;;;AAK1B,EAAE,KAAK;;eAEQ,CAAC;QAEZ,MAAM,cAAc,mBAAmB;QACvC,MAAM,cAAc,CAAC,kEAAkE,EAAE,aAAa;QACtG,OAAO,IAAI,CAAC,aAAa;IAC3B;IAEA,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BAAgB;;;;;;;;;;;IAGrC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;;4BAAsB;4BAC9B,OAAO,WAAW;4BAAG;;;;;;;kCAE3B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;0CAGD,8OAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;;YAMJ,uBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;kCAAO;;;;;;oBAAe;oBAAE;;;;;;;0BAK7B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAK,WAAU;sCAAkB;;;;;;;;;;;;;;;;;;;;;0BAMxC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;kCAAmB;;;;;;kCAChC,8OAAC;wBAAG,WAAU;;0CACZ,8OAAC;0CAAG;;;;;;0CACJ,8OAAC;;oCAAG;kDAA0C,8OAAC;kDAAK;;;;;;oCAAW;kDAAE,8OAAC;kDAAK;;;;;;;;;;;;0CACvE,8OAAC;0CAAG;;;;;;0CACJ,8OAAC;0CAAG;;;;;;;;;;;;;;;;;;;;;;;;AAKd","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///Users/tazkia/Documents/GitHub/ChartGenie/app/components/PlantUMLRenderer.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\n\nexport default function PlantUMLRenderer({ code }) {\n  const [imageUrl, setImageUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (code) {\n      renderPlantUML();\n    }\n  }, [code]);\n\n  const renderPlantUML = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Use PlantUML's online service to render the diagram\n      const encodedCode = encodePlantUML(code);\n      const plantUMLUrl = `https://www.plantuml.com/plantuml/png/${encodedCode}`;\n      \n      // Test if the image loads successfully\n      const img = new Image();\n      img.onload = () => {\n        setImageUrl(plantUMLUrl);\n        setIsLoading(false);\n      };\n      img.onerror = () => {\n        setError('Failed to render PlantUML diagram');\n        setIsLoading(false);\n      };\n      img.src = plantUMLUrl;\n\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n    }\n  };\n\n  // Simple PlantUML encoding (basic implementation)\n  const encodePlantUML = (uml) => {\n    // This is a simplified encoding - in production, use the official PlantUML encoder\n    try {\n      const compressed = btoa(uml);\n      return compressed;\n    } catch (err) {\n      console.error('PlantUML encoding error:', err);\n      return btoa('@startuml\\n' + uml + '\\n@enduml');\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(code);\n  };\n\n  const openInPlantUMLEditor = () => {\n    const encodedCode = encodeURIComponent(code);\n    const plantUMLEditorUrl = `https://www.plantuml.com/plantuml/uml/${encodePlantUML(code)}`;\n    window.open(plantUMLEditorUrl, '_blank');\n  };\n\n  const downloadImage = () => {\n    if (imageUrl) {\n      const link = document.createElement('a');\n      link.href = imageUrl;\n      link.download = 'plantuml-diagram.png';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-gray-500\">🔄 Rendering PlantUML diagram...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full h-full flex flex-col\">\n      {/* Header with actions */}\n      <div className=\"flex justify-between items-center mb-4 pb-2 border-b\">\n        <h3 className=\"font-medium text-lg\">\n          🌱 PlantUML Diagram\n        </h3>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={copyToClipboard}\n            className=\"px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600\"\n          >\n            📋 Copy Code\n          </button>\n          <button\n            onClick={openInPlantUMLEditor}\n            className=\"px-3 py-1 bg-green-500 text-white rounded text-sm hover:bg-green-600\"\n          >\n            🌐 Open in PlantUML\n          </button>\n          {imageUrl && (\n            <button\n              onClick={downloadImage}\n              className=\"px-3 py-1 bg-purple-500 text-white rounded text-sm hover:bg-purple-600\"\n            >\n              💾 Download PNG\n            </button>\n          )}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          <strong>Error:</strong> {error}\n          <p className=\"text-sm mt-1\">Showing code instead:</p>\n        </div>\n      )}\n\n      {/* Rendered diagram or code fallback */}\n      <div className=\"flex-1 flex\">\n        {/* Image preview */}\n        {imageUrl && !error && (\n          <div className=\"flex-1 bg-white rounded-lg border p-4 mr-4 flex items-center justify-center overflow-auto\">\n            <img \n              src={imageUrl} \n              alt=\"PlantUML Diagram\" \n              className=\"max-w-full max-h-full object-contain\"\n            />\n          </div>\n        )}\n\n        {/* Code view */}\n        <div className={`${imageUrl && !error ? 'w-1/3' : 'flex-1'} bg-gray-50 dark:bg-zinc-900 rounded-lg overflow-hidden`}>\n          <div className=\"p-2 bg-gray-200 dark:bg-zinc-800 text-sm font-medium\">\n            PlantUML Code:\n          </div>\n          <div className=\"h-full overflow-auto\">\n            <pre className=\"p-4 text-sm leading-relaxed\">\n              <code className=\"language-plantuml\">{code}</code>\n            </pre>\n          </div>\n        </div>\n      </div>\n\n      {/* Instructions */}\n      <div className=\"mt-4 p-3 bg-green-50 dark:bg-green-900/20 rounded text-sm\">\n        <p className=\"font-medium mb-1\">💡 PlantUML Tips:</p>\n        <ul className=\"list-disc list-inside space-y-1 text-xs\">\n          <li>Diagrams are rendered using PlantUML's online service</li>\n          <li>Click \"Open in PlantUML\" to edit online</li>\n          <li>Download the PNG for presentations or documentation</li>\n          <li>Code can be used in any PlantUML-compatible tool</li>\n        </ul>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["file:///Users/tazkia/Documents/GitHub/ChartGenie/app/page.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport MermaidRenderer from './components/MermaidRenderer';\nimport LaTeXRenderer from './components/LaTeXRenderer';\nimport PlantUMLRenderer from './components/PlantUMLRenderer';\n\nexport default function Home() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [diagram, setDiagram] = useState(null);\n  const [outputFormat, setOutputFormat] = useState('mermaid');\n  const [supportedFormats, setSupportedFormats] = useState({});\n  const [backendStatus, setBackendStatus] = useState('checking');\n  const [sessionId, setSessionId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  // Ref for the messages container\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n\n  // Auto-scroll to bottom when messages change\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Check backend status and get supported formats on mount\n  useEffect(() => {\n    checkBackendStatus();\n    fetchSupportedFormats();\n  }, []);\n\n  const checkBackendStatus = async () => {\n    try {\n      const res = await fetch('https://chartgeniebackend.onrender.com/api/ping');\n      const data = await res.json();\n      setBackendStatus('connected');\n      console.log('✅ Backend connected:', data);\n    } catch (err) {\n      setBackendStatus('disconnected');\n      console.error('❌ Backend connection failed:', err);\n    }\n  };\n\n  const fetchSupportedFormats = async () => {\n    try {\n      const res = await fetch('https://chartgeniebackend.onrender.com/api/formats');\n      const data = await res.json();\n      setSupportedFormats(data);\n    } catch (err) {\n      console.error('❌ Failed to fetch formats:', err);\n      // Fallback to default formats\n      setSupportedFormats({\n        formats: {\n          MERMAID: 'mermaid',\n          LATEX_TIKZ: 'tikz',\n          LATEX_PGF: 'pgf',\n          PLANTUML: 'plantuml'\n        }\n      });\n    }\n  };\n\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n\n    setIsLoading(true);\n    const userMessage = { role: 'user', content: input, format: outputFormat };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput('');\n\n    // Add loading message\n    const loadingMessage = {\n      role: 'system',\n      content: `Generating ${outputFormat} diagram...`,\n      loading: true\n    };\n    setMessages((prev) => [...prev, loadingMessage]);\n\n    try {\n      const res = await fetch('https://chartgeniebackend.onrender.com/api/diagram', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          message: input,\n          format: outputFormat,\n          sessionId: sessionId,\n          currentDiagram: diagram?.code || null\n        }),\n      });\n\n      const data = await res.json();\n\n      // Update session ID if this is the first request\n      if (!sessionId && data.sessionId) {\n        setSessionId(data.sessionId);\n      }\n\n      // Remove loading message and add success message\n      setMessages((prev) => prev.filter(msg => !msg.loading));\n      \n      const systemMessage = {\n        role: 'system',\n        content: `${data.format} diagram generated successfully`,\n        metadata: {\n          source: data.source,\n          format: data.format,\n          message: data.message,\n          sessionId: data.sessionId\n        }\n      };\n\n      setMessages((prev) => [...prev, systemMessage]);\n      \n      // Set diagram with metadata\n      setDiagram({\n        code: data.diagramCode,\n        format: data.format,\n        source: data.source,\n        originalPrompt: input,\n        sessionId: data.sessionId\n      });\n\n    } catch (err) {\n      // Remove loading message and add error message\n      setMessages((prev) => prev.filter(msg => !msg.loading));\n      \n      console.error('❌ Backend error:', err);\n      \n      const errorMessage = {\n        role: 'system',\n        content: 'Failed to generate diagram. Please check your connection and try again.',\n        error: true\n      };\n      \n      setMessages((prev) => [...prev, errorMessage]);\n      \n      // Show fallback diagram\n      setDiagram({\n        code: 'graph TD;\\nerror(\"Failed to reach backend\")',\n        format: 'mermaid',\n        source: 'error',\n        originalPrompt: input\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const clearConversation = async () => {\n    try {\n      if (sessionId) {\n        await fetch(`https://chartgeniebackend.onrender.com/api/conversation/${sessionId}`, { method: 'DELETE' });\n      }\n      setMessages([]);\n      setDiagram(null);\n      setSessionId(null);\n      setMessages((prev) => [...prev, {\n        role: 'system',\n        content: 'Conversation cleared. Starting fresh!'\n      }]);\n    } catch (err) {\n      console.error('❌ Failed to clear conversation:', err);\n    }\n  };\n\n  const clearCache = async () => {\n    try {\n      await fetch('https://chartgeniebackend.onrender.com/api/cache', { method: 'DELETE' });\n      setMessages((prev) => [...prev, {\n        role: 'system',\n        content: 'Backend cache cleared successfully'\n      }]);\n    } catch (err) {\n      console.error('❌ Failed to clear cache:', err);\n    }\n  };\n\n  const copyDiagramCode = () => {\n    if (diagram?.code) {\n      navigator.clipboard.writeText(diagram.code);\n      setMessages((prev) => [...prev, {\n        role: 'system',\n        content: 'Diagram code copied to clipboard!'\n      }]);\n    }\n  };\n\n  const downloadDiagram = () => {\n    if (diagram?.code) {\n      const fileExtension = diagram.format === 'mermaid' ? 'mmd' : \n                           diagram.format === 'tikz' ? 'tex' :\n                           diagram.format === 'pgf' ? 'tex' : 'txt';\n      \n      const blob = new Blob([diagram.code], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `diagram.${fileExtension}`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 dark:from-slate-900 dark:via-slate-800 dark:to-slate-900\">\n      {/* Header */}\n      <header className=\"border-b border-slate-200/60 dark:border-slate-700/60 bg-white/80 dark:bg-slate-900/80 backdrop-blur-xl sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-8 h-8 bg-gradient-to-br from-blue-500 to-indigo-600 rounded-lg flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-xl font-bold bg-gradient-to-r from-slate-900 to-slate-600 dark:from-white dark:to-slate-300 bg-clip-text text-transparent\">\n                  ChartGenie\n                </h1>\n                <p className=\"text-xs text-slate-500 dark:text-slate-400\">AI-Powered Database Diagrams</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              {/* Status Indicator */}\n              <div className=\"flex items-center space-x-2\">\n                <div className={`w-2 h-2 rounded-full ${\n                  backendStatus === 'connected' ? 'bg-emerald-500' :\n                  backendStatus === 'disconnected' ? 'bg-red-500' :\n                  'bg-yellow-500 animate-pulse'\n                }`} />\n                <span className=\"text-sm text-slate-600 dark:text-slate-300 capitalize\">\n                  {backendStatus}\n                </span>\n              </div>\n              \n              {/* Format Selector */}\n              <select\n                value={outputFormat}\n                onChange={(e) => setOutputFormat(e.target.value)}\n                className=\"px-3 py-1.5 text-sm bg-white dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                {Object.entries(supportedFormats.formats || {}).map(([key, value]) => (\n                  <option key={key} value={value}>\n                    {value.toUpperCase()}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-[400px_1fr] gap-6 h-[calc(100vh-120px)]\">\n          {/* Chat Sidebar */}\n          <aside className=\"bg-white dark:bg-slate-900 rounded-xl border border-slate-200/60 dark:border-slate-700/60 shadow-lg flex flex-col overflow-hidden\">\n            {/* Chat Header */}\n            <div className=\"p-6 border-b border-slate-200/60 dark:border-slate-700/60\">\n              <h2 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-2\">\n                Conversation\n              </h2>\n              {sessionId && (\n                <div className=\"flex items-center space-x-2 text-sm text-slate-500 dark:text-slate-400\">\n                  <span>Session:</span>\n                  <code className=\"px-2 py-1 bg-slate-100 dark:bg-slate-800 rounded text-xs font-mono\">\n                    {sessionId.substring(0, 8)}...\n                  </code>\n                </div>\n              )}\n            </div>\n\n            {/* Messages */}\n            <div \n              ref={messagesContainerRef}\n              className=\"flex-1 overflow-y-auto p-4 space-y-3\"\n            >\n              {messages.length === 0 && (\n                <div className=\"text-center py-8\">\n                  <div className=\"w-12 h-12 mx-auto mb-4 bg-slate-100 dark:bg-slate-800 rounded-full flex items-center justify-center\">\n                    <svg className=\"w-6 h-6 text-slate-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                    </svg>\n                  </div>\n                  <p className=\"text-slate-500 dark:text-slate-400 text-sm\">\n                    Start a conversation about your database schema\n                  </p>\n                </div>\n              )}\n              \n              {messages.map((msg, idx) => (\n                <div\n                  key={idx}\n                  className={`rounded-lg p-3 text-sm ${\n                    msg.role === 'user'\n                      ? 'bg-blue-50 dark:bg-blue-900/20 text-slate-900 dark:text-white ml-8'\n                      : msg.error\n                      ? 'bg-red-50 dark:bg-red-900/20 text-red-800 dark:text-red-200'\n                      : msg.loading\n                      ? 'bg-yellow-50 dark:bg-yellow-900/20 text-yellow-800 dark:text-yellow-200'\n                      : 'bg-slate-50 dark:bg-slate-800/50 text-slate-700 dark:text-slate-300 mr-8'\n                  }`}\n                >\n                  <div className=\"flex items-start space-x-2\">\n                    {msg.role === 'user' ? (\n                      <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                        <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n                        </svg>\n                      </div>\n                    ) : (\n                      <div className=\"w-6 h-6 bg-slate-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                        <svg className=\"w-3 h-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path d=\"M2 5a2 2 0 012-2h7a2 2 0 012 2v4a2 2 0 01-2 2H9l-3 3v-3H4a2 2 0 01-2-2V5z\" />\n                          <path d=\"M15 7v2a4 4 0 01-4 4H9.828l-1.766 1.767c.28.149.599.233.938.233h2l3 3v-3h2a2 2 0 002-2V9a2 2 0 00-2-2h-1z\" />\n                        </svg>\n                      </div>\n                    )}\n                    <div className=\"flex-1\">\n                      <div>{msg.content}</div>\n                      {msg.format && (\n                        <div className=\"text-xs opacity-75 mt-1\">Format: {msg.format}</div>\n                      )}\n                      {msg.metadata && (\n                        <div className=\"text-xs opacity-75 mt-1\">\n                          {msg.metadata.message}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n              <div ref={messagesEndRef} />\n            </div>\n\n            {/* Input Section */}\n            <div className=\"p-4 border-t border-slate-200/60 dark:border-slate-700/60 space-y-3\">\n              <div className=\"flex space-x-2\">\n                <input\n                  type=\"text\"\n                  placeholder={sessionId ? \"Add tables, modify schema, or ask questions...\" : \"Describe your database schema...\"}\n                  value={input}\n                  onChange={(e) => setInput(e.target.value)}\n                  onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n                  className=\"flex-1 px-3 py-2 text-sm bg-white dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent disabled:opacity-50\"\n                  disabled={backendStatus !== 'connected' || isLoading}\n                />\n                <button\n                  onClick={handleSend}\n                  disabled={backendStatus !== 'connected' || isLoading || !input.trim()}\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-slate-400 text-white rounded-lg font-medium text-sm transition-colors focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n                >\n                  {isLoading ? (\n                    <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                    </svg>\n                  ) : (\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\n                    </svg>\n                  )}\n                </button>\n              </div>\n              \n              {/* Action Buttons */}\n              <div className=\"flex flex-wrap gap-2\">\n                <button\n                  onClick={clearConversation}\n                  className=\"px-3 py-1.5 text-xs bg-slate-100 dark:bg-slate-800 hover:bg-slate-200 dark:hover:bg-slate-700 text-slate-700 dark:text-slate-300 rounded-md transition-colors\"\n                >\n                  New Chat\n                </button>\n                <button\n                  onClick={clearCache}\n                  className=\"px-3 py-1.5 text-xs bg-slate-100 dark:bg-slate-800 hover:bg-slate-200 dark:hover:bg-slate-700 text-slate-700 dark:text-slate-300 rounded-md transition-colors\"\n                >\n                  Clear Cache\n                </button>\n                <button\n                  onClick={copyDiagramCode}\n                  disabled={!diagram}\n                  className=\"px-3 py-1.5 text-xs bg-slate-100 dark:bg-slate-800 hover:bg-slate-200 dark:hover:bg-slate-700 text-slate-700 dark:text-slate-300 rounded-md transition-colors disabled:opacity-50\"\n                >\n                  Copy Code\n                </button>\n                <button\n                  onClick={downloadDiagram}\n                  disabled={!diagram}\n                  className=\"px-3 py-1.5 text-xs bg-slate-100 dark:bg-slate-800 hover:bg-slate-200 dark:hover:bg-slate-700 text-slate-700 dark:text-slate-300 rounded-md transition-colors disabled:opacity-50\"\n                >\n                  Download\n                </button>\n              </div>\n            </div>\n          </aside>\n\n          {/* Diagram Preview */}\n          <main className=\"bg-white dark:bg-slate-900 rounded-xl border border-slate-200/60 dark:border-slate-700/60 shadow-lg overflow-hidden\">\n            <div className=\"p-6 border-b border-slate-200/60 dark:border-slate-700/60\">\n              <h2 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-2\">\n                Diagram Preview\n              </h2>\n              {diagram && (\n                <div className=\"flex items-center space-x-4 text-sm text-slate-500 dark:text-slate-400\">\n                  <span className=\"flex items-center space-x-1\">\n                    <span>Format:</span>\n                    <span className=\"px-2 py-1 bg-slate-100 dark:bg-slate-800 rounded text-xs font-medium\">\n                      {diagram.format.toUpperCase()}\n                    </span>\n                  </span>\n                  <span className=\"flex items-center space-x-1\">\n                    <span>Source:</span>\n                    <span className=\"px-2 py-1 bg-slate-100 dark:bg-slate-800 rounded text-xs font-medium\">\n                      {diagram.source}\n                    </span>\n                  </span>\n                  {diagram.sessionId && (\n                    <span className=\"flex items-center space-x-1\">\n                      <span>Session:</span>\n                      <code className=\"px-2 py-1 bg-slate-100 dark:bg-slate-800 rounded text-xs font-mono\">\n                        {diagram.sessionId.substring(0, 8)}...\n                      </code>\n                    </span>\n                  )}\n                </div>\n              )}\n            </div>\n\n                         <div className=\"p-6 h-[calc(100%-120px)] overflow-auto\">\n               {diagram ? (\n                 <div className=\"min-h-full\">\n                   <DiagramRenderer diagram={diagram} />\n                 </div>\n               ) : (\n                <div className=\"flex items-center justify-center h-full\">\n                  <div className=\"text-center max-w-md\">\n                    <div className=\"w-16 h-16 mx-auto mb-6 bg-gradient-to-br from-blue-100 to-indigo-100 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-full flex items-center justify-center\">\n                      <svg className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                      </svg>\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-2\">\n                      Ready to Create Diagrams\n                    </h3>\n                    <p className=\"text-slate-600 dark:text-slate-400 mb-4\">\n                      Start by describing your database schema or requirements in the chat panel.\n                    </p>\n                    <div className=\"space-y-2 text-sm text-slate-500 dark:text-slate-400\">\n                      <p className=\"flex items-center space-x-2\">\n                        <span className=\"w-2 h-2 bg-blue-500 rounded-full\"></span>\n                        <span>Try: \"I need a hospital database\"</span>\n                      </p>\n                      <p className=\"flex items-center space-x-2\">\n                        <span className=\"w-2 h-2 bg-indigo-500 rounded-full\"></span>\n                        <span>Then: \"Add a pharmacy table\"</span>\n                      </p>\n                      <p className=\"flex items-center space-x-2\">\n                        <span className=\"w-2 h-2 bg-purple-500 rounded-full\"></span>\n                        <span>Finally: \"Connect patients to pharmacies\"</span>\n                      </p>\n                    </div>\n                    <div className=\"mt-6 p-4 bg-slate-50 dark:bg-slate-800/50 rounded-lg\">\n                      <p className=\"text-xs text-slate-500 dark:text-slate-400\">\n                        <strong>Supported Formats:</strong> Mermaid, TikZ/LaTeX, PGF, PlantUML\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Universal Diagram Renderer Component\nfunction DiagramRenderer({ diagram }) {\n  if (!diagram || !diagram.code) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <p className=\"text-red-500\">No diagram code available</p>\n      </div>\n    );\n  }\n\n  switch (diagram.format) {\n    case 'mermaid':\n      return (\n        <div className=\"w-full overflow-auto\">\n          <MermaidRenderer code={diagram.code} />\n        </div>\n      );\n    \n    case 'tikz':\n    case 'pgf':\n      return (\n        <div className=\"w-full overflow-auto\">\n          <LaTeXRenderer code={diagram.code} format={diagram.format} />\n        </div>\n      );\n    \n    case 'plantuml':\n      return (\n        <div className=\"w-full overflow-auto\">\n          <PlantUMLRenderer code={diagram.code} />\n        </div>\n      );\n    \n    default:\n      return <CodeRenderer code={diagram.code} format={diagram.format} />;\n  }\n}\n\n// Code Renderer for unsupported formats\nfunction CodeRenderer({ code, format }) {\n  return (\n    <div className=\"h-full\">\n      <div className=\"mb-4 flex items-center justify-between\">\n        <h3 className=\"text-sm font-medium text-slate-900 dark:text-white\">\n          {format.toUpperCase()} Code\n        </h3>\n        <button\n          onClick={() => navigator.clipboard.writeText(code)}\n          className=\"px-3 py-1 text-xs bg-slate-100 dark:bg-slate-800 hover:bg-slate-200 dark:hover:bg-slate-700 text-slate-700 dark:text-slate-300 rounded-md transition-colors\"\n        >\n          Copy\n        </button>\n      </div>\n      <pre className=\"bg-slate-50 dark:bg-slate-800/50 p-4 rounded-lg overflow-auto h-full text-sm border border-slate-200 dark:border-slate-700\">\n        <code className=\"text-slate-800 dark:text-slate-200\">{code}</code>\n      </pre>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}