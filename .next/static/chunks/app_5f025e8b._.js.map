{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tazkia/Documents/GitHub/ChartGenie/app/components/MermaidRenderer.js"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef } from 'react';\nimport mermaid from 'mermaid';\n\nexport default function MermaidRenderer({ code }) {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    mermaid.initialize({ \n      startOnLoad: true,\n      theme: 'default',\n      securityLevel: 'loose'\n    });\n    \n    if (ref.current && code) {\n      // Clear previous content\n      ref.current.innerHTML = '';\n      \n      try {\n        const uniqueId = `mermaid-${Date.now()}`;\n        mermaid.render(uniqueId, code).then(({ svg }) => {\n          if (ref.current) {\n            ref.current.innerHTML = svg;\n          }\n        }).catch((err) => {\n          console.error('Mermaid render error:', err);\n          if (ref.current) {\n            ref.current.innerHTML = '<p class=\"text-red-500\">⚠️ Failed to render Mermaid diagram.</p>';\n          }\n        });\n      } catch (err) {\n        console.error('Mermaid error:', err);\n        if (ref.current) {\n          ref.current.innerHTML = '<p class=\"text-red-500\">⚠️ Failed to render Mermaid diagram.</p>';\n        }\n      }\n    }\n  }, [code]);\n\n  return <div ref={ref} className=\"w-full overflow-auto\" />;\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS,gBAAgB,EAAE,IAAI,EAAE;;IAC9C,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAEnB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,sJAAA,CAAA,UAAO,CAAC,UAAU,CAAC;gBACjB,aAAa;gBACb,OAAO;gBACP,eAAe;YACjB;YAEA,IAAI,IAAI,OAAO,IAAI,MAAM;gBACvB,yBAAyB;gBACzB,IAAI,OAAO,CAAC,SAAS,GAAG;gBAExB,IAAI;oBACF,MAAM,WAAW,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI;oBACxC,sJAAA,CAAA,UAAO,CAAC,MAAM,CAAC,UAAU,MAAM,IAAI;qDAAC,CAAC,EAAE,GAAG,EAAE;4BAC1C,IAAI,IAAI,OAAO,EAAE;gCACf,IAAI,OAAO,CAAC,SAAS,GAAG;4BAC1B;wBACF;oDAAG,KAAK;qDAAC,CAAC;4BACR,QAAQ,KAAK,CAAC,yBAAyB;4BACvC,IAAI,IAAI,OAAO,EAAE;gCACf,IAAI,OAAO,CAAC,SAAS,GAAG;4BAC1B;wBACF;;gBACF,EAAE,OAAO,KAAK;oBACZ,QAAQ,KAAK,CAAC,kBAAkB;oBAChC,IAAI,IAAI,OAAO,EAAE;wBACf,IAAI,OAAO,CAAC,SAAS,GAAG;oBAC1B;gBACF;YACF;QACF;oCAAG;QAAC;KAAK;IAET,qBAAO,6LAAC;QAAI,KAAK;QAAK,WAAU;;;;;;AAClC;GApCwB;KAAA","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///Users/tazkia/Documents/GitHub/ChartGenie/app/components/LaTeXRenderer.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\n\nexport default function LaTeXRenderer({ code, format = 'tikz' }) {\n  const [imageUrl, setImageUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (code) {\n      renderLaTeX();\n    }\n  }, [code, format]);\n\n  const renderLaTeX = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // For now, we'll show the code and provide options to render\n      // In a production app, you'd integrate with a LaTeX rendering service\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(code);\n  };\n\n  const openInOverleaf = () => {\n    // Create a simple LaTeX document wrapper\n    const fullDocument = `\\\\documentclass{article}\n\\\\usepackage{tikz}\n\\\\usepackage{pgf}\n\\\\begin{document}\n\n${code}\n\n\\\\end{document}`;\n    \n    const encodedCode = encodeURIComponent(fullDocument);\n    const overleafUrl = `https://www.overleaf.com/docs?template=blank&engine=pdflatex#code=${encodedCode}`;\n    window.open(overleafUrl, '_blank');\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-gray-500\">🔄 Rendering LaTeX...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full h-full flex flex-col\">\n      {/* Header with actions */}\n      <div className=\"flex justify-between items-center mb-4 pb-2 border-b\">\n        <h3 className=\"font-medium text-lg\">\n          📐 {format.toUpperCase()} Code\n        </h3>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={copyToClipboard}\n            className=\"px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600\"\n          >\n            📋 Copy Code\n          </button>\n          <button\n            onClick={openInOverleaf}\n            className=\"px-3 py-1 bg-green-500 text-white rounded text-sm hover:bg-green-600\"\n          >\n            📝 Open in Overleaf\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          <strong>Error:</strong> {error}\n        </div>\n      )}\n\n      {/* Code display */}\n      <div className=\"flex-1 bg-gray-50 dark:bg-zinc-900 rounded-lg overflow-hidden\">\n        <div className=\"h-full overflow-auto\">\n          <pre className=\"p-4 text-sm leading-relaxed\">\n            <code className=\"language-latex\">{code}</code>\n          </pre>\n        </div>\n      </div>\n\n      {/* Instructions */}\n      <div className=\"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded text-sm\">\n        <p className=\"font-medium mb-1\">💡 How to use this LaTeX code:</p>\n        <ul className=\"list-disc list-inside space-y-1 text-xs\">\n          <li>Copy the code and paste it into a LaTeX editor like Overleaf</li>\n          <li>Make sure you have the required packages: <code>tikz</code>, <code>pgf</code></li>\n          <li>Compile with pdflatex or xelatex</li>\n          <li>Click \"Open in Overleaf\" for instant editing</li>\n        </ul>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAIe,SAAS,cAAc,EAAE,IAAI,EAAE,SAAS,MAAM,EAAE;;IAC7D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,MAAM;gBACR;YACF;QACF;kCAAG;QAAC;QAAM;KAAO;IAEjB,MAAM,cAAc;QAClB,aAAa;QACb,SAAS;QAET,IAAI;YACF,6DAA6D;YAC7D,sEAAsE;YACtE,aAAa;QACf,EAAE,OAAO,KAAK;YACZ,SAAS,IAAI,OAAO;YACpB,aAAa;QACf;IACF;IAEA,MAAM,kBAAkB;QACtB,UAAU,SAAS,CAAC,SAAS,CAAC;IAChC;IAEA,MAAM,iBAAiB;QACrB,yCAAyC;QACzC,MAAM,eAAe,CAAC;;;;;AAK1B,EAAE,KAAK;;eAEQ,CAAC;QAEZ,MAAM,cAAc,mBAAmB;QACvC,MAAM,cAAc,CAAC,kEAAkE,EAAE,aAAa;QACtG,OAAO,IAAI,CAAC,aAAa;IAC3B;IAEA,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BAAgB;;;;;;;;;;;IAGrC;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;;4BAAsB;4BAC9B,OAAO,WAAW;4BAAG;;;;;;;kCAE3B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;0CAGD,6LAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;;YAMJ,uBACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;kCAAO;;;;;;oBAAe;oBAAE;;;;;;;0BAK7B,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAK,WAAU;sCAAkB;;;;;;;;;;;;;;;;;;;;;0BAMxC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAE,WAAU;kCAAmB;;;;;;kCAChC,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;;oCAAG;kDAA0C,6LAAC;kDAAK;;;;;;oCAAW;kDAAE,6LAAC;kDAAK;;;;;;;;;;;;0CACvE,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;0CAAG;;;;;;;;;;;;;;;;;;;;;;;;AAKd;GAvGwB;KAAA","debugId":null}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file:///Users/tazkia/Documents/GitHub/ChartGenie/app/components/PlantUMLRenderer.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\n\nexport default function PlantUMLRenderer({ code }) {\n  const [imageUrl, setImageUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (code) {\n      renderPlantUML();\n    }\n  }, [code]);\n\n  const renderPlantUML = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Use PlantUML's online service to render the diagram\n      const encodedCode = encodePlantUML(code);\n      const plantUMLUrl = `https://www.plantuml.com/plantuml/png/${encodedCode}`;\n      \n      // Test if the image loads successfully\n      const img = new Image();\n      img.onload = () => {\n        setImageUrl(plantUMLUrl);\n        setIsLoading(false);\n      };\n      img.onerror = () => {\n        setError('Failed to render PlantUML diagram');\n        setIsLoading(false);\n      };\n      img.src = plantUMLUrl;\n\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n    }\n  };\n\n  // Simple PlantUML encoding (basic implementation)\n  const encodePlantUML = (uml) => {\n    // This is a simplified encoding - in production, use the official PlantUML encoder\n    try {\n      const compressed = btoa(uml);\n      return compressed;\n    } catch (err) {\n      console.error('PlantUML encoding error:', err);\n      return btoa('@startuml\\n' + uml + '\\n@enduml');\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(code);\n  };\n\n  const openInPlantUMLEditor = () => {\n    const encodedCode = encodeURIComponent(code);\n    const plantUMLEditorUrl = `https://www.plantuml.com/plantuml/uml/${encodePlantUML(code)}`;\n    window.open(plantUMLEditorUrl, '_blank');\n  };\n\n  const downloadImage = () => {\n    if (imageUrl) {\n      const link = document.createElement('a');\n      link.href = imageUrl;\n      link.download = 'plantuml-diagram.png';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-gray-500\">🔄 Rendering PlantUML diagram...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full h-full flex flex-col\">\n      {/* Header with actions */}\n      <div className=\"flex justify-between items-center mb-4 pb-2 border-b\">\n        <h3 className=\"font-medium text-lg\">\n          🌱 PlantUML Diagram\n        </h3>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={copyToClipboard}\n            className=\"px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600\"\n          >\n            📋 Copy Code\n          </button>\n          <button\n            onClick={openInPlantUMLEditor}\n            className=\"px-3 py-1 bg-green-500 text-white rounded text-sm hover:bg-green-600\"\n          >\n            🌐 Open in PlantUML\n          </button>\n          {imageUrl && (\n            <button\n              onClick={downloadImage}\n              className=\"px-3 py-1 bg-purple-500 text-white rounded text-sm hover:bg-purple-600\"\n            >\n              💾 Download PNG\n            </button>\n          )}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          <strong>Error:</strong> {error}\n          <p className=\"text-sm mt-1\">Showing code instead:</p>\n        </div>\n      )}\n\n      {/* Rendered diagram or code fallback */}\n      <div className=\"flex-1 flex\">\n        {/* Image preview */}\n        {imageUrl && !error && (\n          <div className=\"flex-1 bg-white rounded-lg border p-4 mr-4 flex items-center justify-center overflow-auto\">\n            <img \n              src={imageUrl} \n              alt=\"PlantUML Diagram\" \n              className=\"max-w-full max-h-full object-contain\"\n            />\n          </div>\n        )}\n\n        {/* Code view */}\n        <div className={`${imageUrl && !error ? 'w-1/3' : 'flex-1'} bg-gray-50 dark:bg-zinc-900 rounded-lg overflow-hidden`}>\n          <div className=\"p-2 bg-gray-200 dark:bg-zinc-800 text-sm font-medium\">\n            PlantUML Code:\n          </div>\n          <div className=\"h-full overflow-auto\">\n            <pre className=\"p-4 text-sm leading-relaxed\">\n              <code className=\"language-plantuml\">{code}</code>\n            </pre>\n          </div>\n        </div>\n      </div>\n\n      {/* Instructions */}\n      <div className=\"mt-4 p-3 bg-green-50 dark:bg-green-900/20 rounded text-sm\">\n        <p className=\"font-medium mb-1\">💡 PlantUML Tips:</p>\n        <ul className=\"list-disc list-inside space-y-1 text-xs\">\n          <li>Diagrams are rendered using PlantUML's online service</li>\n          <li>Click \"Open in PlantUML\" to edit online</li>\n          <li>Download the PNG for presentations or documentation</li>\n          <li>Code can be used in any PlantUML-compatible tool</li>\n        </ul>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"sources":["file:///Users/tazkia/Documents/GitHub/ChartGenie/app/page.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport MermaidRenderer from './components/MermaidRenderer';\nimport LaTeXRenderer from './components/LaTeXRenderer';\nimport PlantUMLRenderer from './components/PlantUMLRenderer';\n\nexport default function Home() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [diagram, setDiagram] = useState(null);\n  const [outputFormat, setOutputFormat] = useState('mermaid');\n  const [supportedFormats, setSupportedFormats] = useState({});\n  const [backendStatus, setBackendStatus] = useState('checking');\n  const [sessionId, setSessionId] = useState(null);\n  \n  // Ref for the messages container\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n\n  // Auto-scroll to bottom when messages change\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Check backend status and get supported formats on mount\n  useEffect(() => {\n    checkBackendStatus();\n    fetchSupportedFormats();\n  }, []);\n\n  const checkBackendStatus = async () => {\n    try {\n      const res = await fetch('https://chartgeniebackend.onrender.com/api/ping');\n      const data = await res.json();\n      setBackendStatus('connected');\n      console.log('✅ Backend connected:', data);\n    } catch (err) {\n      setBackendStatus('disconnected');\n      console.error('❌ Backend connection failed:', err);\n    }\n  };\n\n  const fetchSupportedFormats = async () => {\n    try {\n      const res = await fetch('https://chartgeniebackend.onrender.com/api/formats');\n      const data = await res.json();\n      setSupportedFormats(data);\n    } catch (err) {\n      console.error('❌ Failed to fetch formats:', err);\n      // Fallback to default formats\n      setSupportedFormats({\n        formats: {\n          MERMAID: 'mermaid',\n          LATEX_TIKZ: 'tikz',\n          LATEX_PGF: 'pgf',\n          PLANTUML: 'plantuml'\n        }\n      });\n    }\n  };\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { role: 'user', content: input, format: outputFormat };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput('');\n\n    // Add loading message\n    const loadingMessage = {\n      role: 'system',\n      content: `🔄 Generating ${outputFormat} diagram...`,\n      loading: true\n    };\n    setMessages((prev) => [...prev, loadingMessage]);\n\n    try {\n      const res = await fetch('https://chartgeniebackend.onrender.com/api/diagram', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          message: input,\n          format: outputFormat,\n          sessionId: sessionId,\n          currentDiagram: diagram?.code || null\n        }),\n      });\n\n      const data = await res.json();\n\n      // Update session ID if this is the first request\n      if (!sessionId && data.sessionId) {\n        setSessionId(data.sessionId);\n      }\n\n      // Remove loading message and add success message\n      setMessages((prev) => prev.filter(msg => !msg.loading));\n      \n      const systemMessage = {\n        role: 'system',\n        content: `✅ ${data.format} diagram generated! (Source: ${data.source})`,\n        metadata: {\n          source: data.source,\n          format: data.format,\n          message: data.message,\n          sessionId: data.sessionId\n        }\n      };\n\n      setMessages((prev) => [...prev, systemMessage]);\n      \n      // Set diagram with metadata\n      setDiagram({\n        code: data.diagramCode,\n        format: data.format,\n        source: data.source,\n        originalPrompt: input,\n        sessionId: data.sessionId\n      });\n\n    } catch (err) {\n      // Remove loading message and add error message\n      setMessages((prev) => prev.filter(msg => !msg.loading));\n      \n      console.error('❌ Backend error:', err);\n      \n      const errorMessage = {\n        role: 'system',\n        content: '❌ Failed to generate diagram. Check backend connection.',\n        error: true\n      };\n      \n      setMessages((prev) => [...prev, errorMessage]);\n      \n      // Show fallback diagram\n      setDiagram({\n        code: 'graph TD;\\nerror(\"Failed to reach backend\")',\n        format: 'mermaid',\n        source: 'error',\n        originalPrompt: input\n      });\n    }\n  };\n\n  const clearConversation = async () => {\n    try {\n      if (sessionId) {\n        await fetch(`https://chartgeniebackend.onrender.com/api/conversation/${sessionId}`, { method: 'DELETE' });\n      }\n      setMessages([]);\n      setDiagram(null);\n      setSessionId(null);\n      setMessages((prev) => [...prev, {\n        role: 'system',\n        content: '🗑️ Conversation cleared. Starting fresh!'\n      }]);\n    } catch (err) {\n      console.error('❌ Failed to clear conversation:', err);\n    }\n  };\n\n  const clearCache = async () => {\n    try {\n      await fetch('https://chartgeniebackend.onrender.com/api/cache', { method: 'DELETE' });\n      setMessages((prev) => [...prev, {\n        role: 'system',\n        content: '🗑️ Backend cache cleared successfully'\n      }]);\n    } catch (err) {\n      console.error('❌ Failed to clear cache:', err);\n    }\n  };\n\n  const copyDiagramCode = () => {\n    if (diagram?.code) {\n      navigator.clipboard.writeText(diagram.code);\n      setMessages((prev) => [...prev, {\n        role: 'system',\n        content: '📋 Diagram code copied to clipboard!'\n      }]);\n    }\n  };\n\n  const downloadDiagram = () => {\n    if (diagram?.code) {\n      const fileExtension = diagram.format === 'mermaid' ? 'mmd' : \n                           diagram.format === 'tikz' ? 'tex' :\n                           diagram.format === 'pgf' ? 'tex' : 'txt';\n      \n      const blob = new Blob([diagram.code], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `diagram.${fileExtension}`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    }\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-[400px_1fr] h-screen overflow-hidden\">\n      {/* Chat Sidebar */}\n      <aside className=\"bg-white dark:bg-zinc-900 border-r border-zinc-200 dark:border-zinc-800 flex flex-col h-screen\">\n        {/* Fixed Header Section */}\n        <div className=\"p-4 border-b border-zinc-200 dark:border-zinc-800\">\n          <h2 className=\"text-xl font-semibold mb-2\">🧠 Chat with ChartGenie</h2>\n          \n          {/* Backend Status */}\n          <div className={`text-xs px-2 py-1 rounded mb-2 ${\n            backendStatus === 'connected' ? 'bg-green-100 text-green-800' :\n            backendStatus === 'disconnected' ? 'bg-red-100 text-red-800' :\n            'bg-yellow-100 text-yellow-800'\n          }`}>\n            Backend: {backendStatus}\n          </div>\n\n          {/* Session Info */}\n          {sessionId && (\n            <div className=\"text-xs px-2 py-1 rounded mb-2 bg-blue-100 text-blue-800\">\n              Session: {sessionId.substring(0, 8)}...\n            </div>\n          )}\n\n          {/* Format Selection */}\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Output Format:</label>\n            <select\n              value={outputFormat}\n              onChange={(e) => setOutputFormat(e.target.value)}\n              className=\"w-full p-2 rounded border dark:bg-zinc-800 dark:border-zinc-600 text-sm\"\n            >\n              {Object.entries(supportedFormats.formats || {}).map(([key, value]) => (\n                <option key={key} value={value}>\n                  {value.toUpperCase()} - {key.replace('_', ' ')}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Scrollable Messages Section */}\n        <div \n          ref={messagesContainerRef}\n          className=\"flex-1 overflow-y-auto p-4 space-y-2 scroll-smooth\"\n        >\n          {messages.map((msg, idx) => (\n            <div\n              key={idx}\n              className={`rounded-lg p-2 text-sm ${\n                msg.role === 'user'\n                  ? 'bg-blue-100 dark:bg-blue-800 text-black dark:text-white'\n                  : msg.error\n                  ? 'bg-red-100 dark:bg-red-800 text-black dark:text-white'\n                  : msg.loading\n                  ? 'bg-yellow-100 dark:bg-yellow-800 text-black dark:text-white'\n                  : 'bg-gray-200 dark:bg-zinc-700 text-black dark:text-white'\n              }`}\n            >\n              <div>{msg.content}</div>\n              {msg.format && (\n                <div className=\"text-xs opacity-75 mt-1\">Format: {msg.format}</div>\n              )}\n              {msg.metadata && (\n                <div className=\"text-xs opacity-75 mt-1\">\n                  {msg.metadata.message}\n                </div>\n              )}\n            </div>\n          ))}\n          {/* Invisible element to scroll to */}\n          <div ref={messagesEndRef} />\n        </div>\n\n        {/* Fixed Input Section */}\n        <div className=\"p-4 border-t border-zinc-200 dark:border-zinc-800 space-y-2\">\n          <div className=\"flex gap-2\">\n            <input\n              type=\"text\"\n              placeholder={sessionId ? \"Add tables, modify schema, or ask questions...\" : \"Describe your database schema...\"}\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleSend()}\n              className=\"flex-1 p-2 rounded border dark:bg-zinc-800 dark:border-zinc-600\"\n              disabled={backendStatus !== 'connected'}\n            />\n            <button\n              onClick={handleSend}\n              disabled={backendStatus !== 'connected'}\n              className=\"bg-black text-white px-4 py-2 rounded hover:bg-gray-800 disabled:bg-gray-400\"\n            >\n              Send\n            </button>\n          </div>\n          \n          {/* Control Buttons */}\n          <div className=\"flex gap-2 text-xs\">\n            <button\n              onClick={clearConversation}\n              className=\"px-2 py-1 bg-blue-200 dark:bg-blue-700 rounded hover:bg-blue-300\"\n            >\n              New Chat\n            </button>\n            <button\n              onClick={clearCache}\n              className=\"px-2 py-1 bg-gray-200 dark:bg-zinc-700 rounded hover:bg-gray-300\"\n            >\n              Clear Cache\n            </button>\n            <button\n              onClick={copyDiagramCode}\n              disabled={!diagram}\n              className=\"px-2 py-1 bg-gray-200 dark:bg-zinc-700 rounded hover:bg-gray-300 disabled:opacity-50\"\n            >\n              Copy Code\n            </button>\n            <button\n              onClick={downloadDiagram}\n              disabled={!diagram}\n              className=\"px-2 py-1 bg-gray-200 dark:bg-zinc-700 rounded hover:bg-gray-300 disabled:opacity-50\"\n            >\n              Download\n            </button>\n          </div>\n        </div>\n      </aside>\n\n      {/* Preview Pane */}\n      <main className=\"p-8 overflow-y-auto bg-gray-50 dark:bg-zinc-800 text-black dark:text-white\">\n        <div className=\"mb-4\">\n          <h1 className=\"text-2xl font-bold\">📊 Diagram Preview</h1>\n          {diagram && (\n            <div className=\"text-sm text-gray-600 dark:text-gray-400 mt-2\">\n              Format: {diagram.format} | Source: {diagram.source}\n              {diagram.sessionId && (\n                <span> | Session: {diagram.sessionId.substring(0, 8)}...</span>\n              )}\n              {diagram.originalPrompt && (\n                <span> | Last: \"{diagram.originalPrompt}\"</span>\n              )}\n            </div>\n          )}\n        </div>\n\n        <div className=\"w-full h-[80vh] rounded-lg border border-dashed border-zinc-400 dark:border-zinc-600 p-4\">\n          {diagram ? (\n            <DiagramRenderer diagram={diagram} />\n          ) : (\n            <div className=\"flex items-center justify-center h-full\">\n              <div className=\"text-center text-zinc-500\">\n                <p className=\"mb-2\">Start a conversation about your database schema</p>\n                <p className=\"text-sm mb-4\">\n                  Try: \"I need a hospital database\" → \"Add a pharmacy table\" → \"Connect patients to pharmacies\"\n                </p>\n                <p className=\"text-xs\">\n                  💬 Conversational: Ask for modifications, additions, or completely new schemas\n                </p>\n                <p className=\"text-xs mt-1\">\n                  🔧 Supports: Mermaid, TikZ/LaTeX, PGF, PlantUML\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\n// Universal Diagram Renderer Component\nfunction DiagramRenderer({ diagram }) {\n  if (!diagram || !diagram.code) {\n    return <p className=\"text-red-500\">No diagram code available</p>;\n  }\n\n  switch (diagram.format) {\n    case 'mermaid':\n      return <MermaidRenderer code={diagram.code} />;\n    \n    case 'tikz':\n    case 'pgf':\n      return <LaTeXRenderer code={diagram.code} format={diagram.format} />;\n    \n    case 'plantuml':\n      return <PlantUMLRenderer code={diagram.code} />;\n    \n    default:\n      return <CodeRenderer code={diagram.code} format={diagram.format} />;\n  }\n}\n\n// Code Renderer for unsupported formats\nfunction CodeRenderer({ code, format }) {\n  return (\n    <div className=\"w-full h-full\">\n      <div className=\"mb-2 text-sm font-medium\">\n        {format.toUpperCase()} Code:\n      </div>\n      <pre className=\"bg-gray-100 dark:bg-zinc-900 p-4 rounded overflow-auto h-full text-sm\">\n        <code>{code}</code>\n      </pre>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}